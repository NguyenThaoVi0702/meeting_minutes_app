# ==================================================================
# STEP 5: ANALYSIS AND DOWNLOADS (Primary Workflow)
# ==================================================================
print("\n\n--- STEP 5: TESTING ANALYSIS AND DOWNLOADS ---")

# --- NEW: Loop to test ALL summary types ---
summary_types_to_test = ["topic", "speaker", "action_items", "decision_log"]
print(f"\nTesting all {len(summary_types_to_test)} summary endpoints...")

for summary_type in summary_types_to_test:
    print(f"\nTesting: POST /meeting/{encoded_request_id}/summary (type: {summary_type})")
    summary_payload = {"summary_type": summary_type}
    summary_response = requests.post(f"{API_BASE_URL}/meeting/{encoded_request_id}/summary?username={TEST_USERNAME}", json=summary_payload)
    print_response(summary_response, f"Generate '{summary_type}' Summary")
    # Add a small delay to avoid overwhelming the AI service if it has rate limits
    time.sleep(1)

# --- Test Chat Endpoint (remains the same) ---
print(f"\nTesting: POST /meeting/chat")
chat_payload = {"requestId": request_id, "username": TEST_USERNAME, "message": "What were the main conclusions and who is responsible for what?"}
chat_response = requests.post(f"{API_BASE_URL}/meeting/chat", json=chat_payload)
print_response(chat_response, "Chat")

# --- Test Download Endpoints (remains the same) ---
print(f"\nTesting: GET /meeting/{encoded_request_id}/download/audio")
audio_dl_response = requests.get(f"{API_BASE_URL}/meeting/{encoded_request_id}/download/audio?username={TEST_USERNAME}")
if audio_dl_response.status_code == 200:
    audio_save_path = os.path.join(DOWNLOAD_DIR, f"{request_id}_audio.wav")
    with open(audio_save_path, 'wb') as f: f.write(audio_dl_response.content)
    print(f"  -> [Download Audio] OK. File saved inside container at {audio_save_path}")
else:
    print(f"  -> [Download Audio] FAILED with status: {audio_dl_response.status_code}")


document_types_to_test = ["bbh_hdqt", "nghi_quyet"]
for doc_type in document_types_to_test:
    print(f"\nTesting document download (type: {doc_type})")
    doc_params = {'username': TEST_USERNAME, 'template_type': doc_type}
    doc_dl_response = requests.get(f"{API_BASE_URL}/meeting/{encoded_request_id}/download/document", params=doc_params)
    if doc_dl_response.status_code == 200:
        doc_save_path = os.path.join(DOWNLOAD_DIR, f"{request_id}_{doc_type}.docx")
        with open(doc_save_path, 'wb') as f: f.write(doc_dl_response.content)
        print(f"  -> [Download Document] OK. File saved inside container at {doc_save_path}")
    else:
        print_response(doc_dl_response, f"Download {doc_type}")
