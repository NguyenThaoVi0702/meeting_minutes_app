# in app/utils.py
import re
from docxtpl import RichText

def add_markdown_to_doc(markdown_text: str) -> RichText:
    """
    Converts a Markdown string into a RichText object for docxtpl.
    Applies named styles from the Word template for formatting.

    Args:
        markdown_text (str): The Markdown string from the LLM.

    Returns:
        RichText: An object that docxtpl can render into formatted content.
    """
    rt = RichText()
    lines = markdown_text.split('\n')

    for line in lines:
        stripped_line = line.strip()
        if not stripped_line:
            continue

        # --- THIS IS THE KEY LOGIC ---
        # We create a new paragraph for each line first.
        # This gives us a paragraph object to apply styles to.
        p = rt.add_paragraph()

        # Check for bullet points
        if stripped_line.startswith(('* ', '- ')):
            # Apply the named style from your Word template
            p.style = 'List Bullet'
            # Remove the markdown characters
            content = stripped_line[2:]
        else:
            # For regular lines, it will use the default 'Normal' style
            content = stripped_line
        
        # Now, process the content of the line for bolding
        # Split by bold tags, keeping the tags themselves
        parts = re.split(r'(\*\*.*?\*\*)', content)
        for part in parts:
            if part.startswith('**') and part.endswith('**'):
                # Add a run with the bold property set to True
                p.add_run(part[2:-2], bold=True)
            elif part:
                # Add a regular run
                p.add_run(part)

    return rt
